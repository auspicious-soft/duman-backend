name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bookstagram-backend:latest

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_URL }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_URL }} << 'ENDSSH'
            # Ensure Docker is installed
            if ! command -v docker &> /dev/null; then 
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi

            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/bookstagram-backend:latest

            # Stop and remove existing container
            docker stop bookstagram-backend || true
            docker rm bookstagram-backend || true

            # Run new container
            docker run -d -p 8000:8000 --name bookstagram-backend \
              -e MONGO_URL='${{ secrets.MONGO_URL }}' \
              -e PORT='${{ secrets.PORT }}' \
              -e NEXT_PUBLIC_APP_URL='${{ secrets.NEXT_PUBLIC_APP_URL }}' \
              -e RESEND_API_KEY='${{ secrets.RESEND_API_KEY }}' \
              -e COMPANY_RESEND_GMAIL_ACCOUNT='${{ secrets.COMPANY_RESEND_GMAIL_ACCOUNT }}' \
              -e ACCOUNTSID='${{ secrets.ACCOUNTSID }}' \
              -e AUTHTOKEN='${{ secrets.AUTHTOKEN }}' \
              -e AUTH_SECRET='${{ secrets.AUTH_SECRET }}' \
              -e JWT_SALT='${{ secrets.JWT_SALT }}' \
              -e AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}' \
              -e AWS_REGION='${{ secrets.AWS_REGION }}' \
              -e AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}' \
              -e AWS_BUCKET_NAME='${{ secrets.AWS_BUCKET_NAME }}' \
              ${{ secrets.DOCKER_USERNAME }}/bookstagram-backend:latest

            # Clean up
            docker image prune -f
            docker system prune -af --volumes
          ENDSSH